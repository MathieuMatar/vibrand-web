<style>
    .single-note,
    .single-task {
        display: flex;
        gap: 10px;
        border: 2px solid black;
        padding: 8px;
        border-radius: 8px;
        margin: 10px;
    }

    .task {
        overflow: hidden;
    }
</style>

<style>
    /* Main container styling */
    #single-task {
        height: 90%;
        width: 80%;
        border: none;
        border-radius: 12px;
        margin: 20px auto;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        padding: 25px;
        background-color: white;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    /* Title input styling */
    #title {
        border: none;
        border-bottom: 2px solid #e0e6ed;
        padding: 10px 5px;
        font-size: 22px;
        font-weight: 600;
        color: #2c3e50;
        width: 100%;
        transition: border-color 0.3s;
        outline: none;
    }

    #title:focus {
        border-bottom: 2px solid #3498db;
    }

    #title::placeholder {
        color: #b3c1d1;
    }

    /* Task description textarea */
    #task_description {
        border: none;
        border-radius: 8px;
        background-color: #f8fafc;
        padding: 15px;
        font-size: 16px;
        color: #34495e;
        width: 100%;
        height: 150px;
        resize: vertical;
        outline: none;
        transition: background-color 0.3s;
    }

    #task_description:focus {
        background-color: #eef2f7;
    }

    /* Date picker styling */
    #birthday {
        border: 1px solid #e0e6ed;
        border-radius: 6px;
        padding: 12px 15px;
        font-size: 15px;
        color: #34495e;
        width: 100%;
        outline: none;
        cursor: pointer;
        transition: border-color 0.3s;
    }

    #birthday:focus {
        border-color: #3498db;
    }

    /* Select boxes styling */
    select {
        border: 1px solid #e0e6ed;
        border-radius: 6px;
        padding: 12px 15px;
        font-size: 15px;
        color: #34495e;
        width: 100%;
        outline: none;
        cursor: pointer;
        background: url("data:image/svg+xml;utf8,<svg fill='%23555' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>") no-repeat;
        background-position: right 10px top 50%;
        background-color: white;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        transition: border-color 0.3s;
    }

    select:focus {
        border-color: #3498db;
    }

    /* Dropdown container for responsive layout */
    .select-group {
        display: flex;
        gap: 15px;
        width: 100%;
    }

    .select-group select {
        flex: 1;
    }

    /* Task info styling */
    .task.info {
        margin-top: 20px;
        padding: 15px;
        background-color: #f8fafc;
        border-radius: 8px;
        font-size: 14px;
        color: #7f8c8d;
        display: flex;
        justify-content: space-between;
        font-style: italic;
    }

    /* Responsive adjustments */

    /* Add a submit button */
    .submit-button {
        background-color: #3498db;
        color: white;
        border: none;
        border-radius: 6px;
        padding: 12px 25px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        align-self: flex-end;
        margin-top: 10px;
        transition: background-color 0.3s;
    }

    .submit-button:hover {
        background-color: #2980b9;
    }
</style>
<%= id %>
<%= projectId %>
<button class="btn" id="add-task">+</button>
<% tasks.forEach(task=> { %>
    <div class="single-<%= task.type %>" task-id="<%= task.id %>">
        <% if (task.type === 'task') { %>
            <input type="checkbox" id="vehicle1" name="vehicle1" value="Bike">
        <% } %>
    <span class="text"><%= task.task_description %></span>
    <% if (task.type === 'task') { %>
    <span><%= task.due_date %></span>
    <% } %>
</div>   
<% }); %>




<script>
    //get all single-note and single-keep as one const together
    const notes = document.querySelectorAll('.single-note, .single-task');
    //one one of them is clicked, show an alerts with task-id
    notes.forEach(note => {
        note.addEventListener('click', () => {
            const taskId = note.getAttribute('task-id');
            //use the api /api/tasks/:id and get the json
            fetch(`/api/tasks/${taskId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    //show the data in a modal or something
                    renderTasks(data);

                })
                .catch(error => {
                    console.error('Error:', error);
                });

        });
    });

function renderTasks(tasks) {
    console.log(tasks);
    const taskView = `
        <div id="single-task">
            <button>done</button>
        </div>
    `;

    const container = document.createElement('div');
    container.innerHTML = taskView; // ✔️ Use the correct variable
    document.body.appendChild(container);
}

</script>